" <<<<<<<< General >>>>>>>>

" specify viminfo path
set viminfo+=n~/.viminfo

" disable beeping and screen flash on error
set visualbell
set t_vb=

" map leader -> comma
let mapleader=","

" syntax coloring
syntax on

" line numbers
set number
set relativenumber

" scrolloff
set scrolloff=10

" normal backspace
set backspace=indent,eol,start

" indentation
set tabstop=2 softtabstop=2 shiftwidth=2 expandtab
set autoindent

" wrap on linebreak (show as much as possible)
set wrap
set linebreak
set display+=lastline

" << search >>

" show matches as you type
set incsearch
" highlight all matches
set hlsearch
" case sensitive if the search contains
" capitals (ignorecase needs to be set for this)
" whole word -> /\<word\>
" lowercase sensitive -> /word\C (`\C` can be anywhere)
set ignorecase
set smartcase

" <<<<<<<< Syntax Groups >>>>>>>>

" Tab
syntax match Tab /\t/

" <<<<<<<< Colors >>>>>>>>

" background
set background=dark

" colorscheme
colorscheme desert

" 256 color
set t_Co=256

" << highlighting >>

" search
hi Search cterm=None ctermfg=black ctermbg=cyan
hi IncSearch cterm=None ctermfg=black ctermbg=cyan

" matching
hi MatchParen cterm=None ctermfg=black ctermbg=cyan

" transparent background
hi Normal ctermbg=None

" whitespace
highlight ExtraWhitespace ctermbg=magenta
" keep through color scheme change
autocmd ColorScheme * highlight ExtraWhitespace ctermbg=magenta
" trailing whitespace
autocmd InsertEnter * match ExtraWhitespace /\s\+\%#\@<!$/
" highlight on load and leaving insert mode
autocmd BufRead,InsertLeave * match ExtraWhitespace /\s\+$/

" <<<<<<<< Commands >>>>>>>>

" tab highlight and unhighlight
command! HiTab hi Tab ctermbg=blue
command! NoHiTab hi Tab ctermbg=None

" <<<<<<<< File Specific >>>>>>>>

" << git >>

" commit message subject line wrap and color
au FileType gitcommit set tw=72
au FileType gitcommit hi gitcommitSummary ctermfg=blue

" <<<<<<<< Remappings >>>>>>>>

" escape with rolling jk
inoremap jk <esc>
inoremap <esc> <nop>

" home row keys for movement
noremap ; l
noremap l k
noremap k j
noremap j h
noremap <Up> <nop>
noremap <Down> <nop>
noremap <Left> <nop>
noremap <Right> <nop>

" jump paragraphs with K/L
nnoremap K }
vnoremap K }
nnoremap L {
vnoremap L {

" for now remap old bindings (just in normal mode)
nnoremap { K
nnoremap } J

" start/end of line movement
noremap h ^
noremap H $

" quickly turn off highlighting
nmap <leader>n :noh<CR>
