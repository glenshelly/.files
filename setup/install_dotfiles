#! /usr/bin/env bash

set -e

[[ -z "$DOTFILES" ]] && {
  printf "Installation requires a set DOTFILES environment variable.\nThis \
variable must hold the path to this repo (e.g. on my\nmachine I clone this \
repo into my home folder so my DOTFILES\nvariable equals \
'/Users/nathan/.files')\n\nWould you like to set this variable now? \
(y/any other key) "
  read -r -n 1 -s maybe_continue

  [[ "$maybe_continue" == 'y' ]] && {
    printf "\n\nenter path: DOTFILES="
    read -r dotfiles_path
    export DOTFILES="$dotfiles_path"
    printf "\nDOTFILES set to $DOTFILES. Note that this export exists only in \
this script\nYou'll need to export again (or just close and reopen your \
terminal) to have DOTFILES\nset in your calling shell (and by extension for the \
changes made here to take effect".
  } || {
    printf "\n\nTo continue, set DOTFILES \
(\`export DOTFILES=<path-to-this-repo>\`),\nthen rerun this script\nGoodbye."
    exit
  }
}

# run in separate subshells

# install Homebrew and packages, casks & mas apps in `$DOTFILES/Brewfile`
"$DOTFILES/setup/bin/install_brew"

# generate `gitconfig.local` @ `$DOTFILES/git/`
"$DOTFILES/setup/bin/setup_git_config"

# install various pieces too small for their own files
# see the file in question for each piece
"$DOTFILES/setup/bin/install_bits_and_pieces"

# run last for other pieces to be installed
# must be after `setup_git_config` to symlink generated file, and after
# `install_bits_and_pieces` to install submodules first
"$DOTFILES/setup/bin/symlink"
