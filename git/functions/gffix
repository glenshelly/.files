#! /usr/bin/env bash

# Rebase given branch on branch `fix`, abort if no branch given. Attempt to
# delete branch `fix` afterwards if rebase successful.
#
# Second part of 2 part workflow (w/ `gfix`) to quickly fix up a previous commit

[[ -z $1 ]] && {
  echo 'No branch given, aborting'
  return 1
}

git rev-parse --quiet --verify "$1" > /dev/null 2>&1 || {
  echo "Sorry, the branch $1 doesn't seem to exist"
  return 1
}

# abort if there are unstaged changes as this will cause rebase to fail
git diff-index --quiet HEAD -- || {
  echo 'You have unstaged changes, stash or commit them, then run again'
  return 1
}

# checkout branch to rebase on fix
git checkout "$1" || {
  echo 'Checkout failed, please fix the error then try again'
  return 1
}

# should not fail due to untracked changes as we checked previously
# delete branch only if merging succeeds
git rebase --interactive fix && git branch --delete fix
